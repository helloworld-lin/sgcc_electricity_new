# 多阶段构建 - 最小化Docker镜像
# 第一阶段：构建阶段
FROM python:3.12.11-slim-bookworm AS builder

# 设置环境变量
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1

# 安装构建依赖
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# 复制requirements.txt并安装Python依赖
COPY requirements.txt /tmp/requirements.txt
RUN pip install --user --no-cache-dir -r /tmp/requirements.txt

# 第二阶段：运行阶段
FROM python:3.12.11-slim-bookworm AS runtime

# 设置环境变量
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV SET_CONTAINER_TIMEZONE=true
ENV CONTAINER_TIMEZONE=Asia/Shanghai
ENV TZ=Asia/Shanghai
ENV LANG=C.UTF-8
ENV PYTHON_IN_DOCKER='PYTHON_IN_DOCKER'

# 创建非root用户
RUN groupadd -r appuser && useradd -r -g appuser appuser

# 安装运行时依赖（最小化）
RUN apt-get update && apt-get install -y --no-install-recommends \
    firefox-esr \
    tzdata \
    jq \
    && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \
    && echo $TZ > /etc/timezone \
    && dpkg-reconfigure --frontend noninteractive tzdata \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# 从构建阶段复制Python包
COPY --from=builder /root/.local /home/appuser/.local

# 创建应用目录
WORKDIR /app
RUN mkdir -p /data && chown -R appuser:appuser /app /data

# 复制应用代码（只复制必要的Python文件）
COPY scripts/*.py /app/
RUN chown -R appuser:appuser /app

# 切换到非root用户
USER appuser

# 设置Python路径
ENV PATH=/home/appuser/.local/bin:$PATH

# 下载Firefox驱动
RUN python3 firefox_driver_download.py && \
    mv geckodriver* /usr/local/bin/geckodriver && \
    chmod +x /usr/local/bin/geckodriver

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python3 -c "from scripts.ncc_matcher import SliderCaptchaMatcher; print('OK')" || exit 1

# 启动命令
CMD ["python3", "main.py"]

