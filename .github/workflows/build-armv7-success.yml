name: Build ARMv7 Docker Image (成功版本+同步)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: sgcc_electricity

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: linux/arm/v7
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=raw,value=armv7-latest,enable={{is_default_branch}}
          type=sha,prefix=armv7-{{branch}}-
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile-armv7
        platforms: linux/arm/v7
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Test image (if not pushing)
      if: github.event_name == 'pull_request'
      run: |
        docker buildx build \
          --platform linux/arm/v7 \
          --file ./Dockerfile-armv7 \
          --load \
          --tag test-image \
          .
        echo "✅ ARM v7 镜像构建测试成功"
    
    - name: Mirror to Aliyun Container Registry
      if: github.event_name != 'pull_request'
      run: |
        echo "🔄 开始镜像同步到阿里云..."
        
        # 设置变量
        DOCKERHUB_IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/sgcc_electricity:armv7-latest"
        ALIYUN_IMAGE="crpi-s1ugew53omsoe998.cn-hangzhou.personal.cr.aliyuncs.com/helloworld-lin/sgcc_electricity:armv7-latest"
        
        # 等待镜像推送完成
        sleep 10
        
        # 拉取Docker Hub镜像（指定ARMv7平台）
        echo "📥 从Docker Hub拉取ARMv7镜像..."
        docker pull --platform linux/arm/v7 $DOCKERHUB_IMAGE
        
        # 重新标记为阿里云镜像
        echo "🏷️ 重新标记镜像..."
        docker tag $DOCKERHUB_IMAGE $ALIYUN_IMAGE
        
        # 登录阿里云个人版
        echo "🔐 登录阿里云容器镜像服务（个人版）..."
        echo "${{ secrets.ALIYUN_PASSWORD }}" | docker login crpi-s1ugew53omsoe998.cn-hangzhou.personal.cr.aliyuncs.com -u "${{ secrets.ALIYUN_USERNAME }}" --password-stdin
        
        # 推送到阿里云
        echo "📤 推送到阿里云镜像仓库..."
        docker push $ALIYUN_IMAGE
        
        echo "✅ 镜像同步完成！"

    - name: Create build summary
      run: |
        echo "## 🎉 ARMv7 镜像构建完成 (双镜像源)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📊 构建信息" >> $GITHUB_STEP_SUMMARY
        echo "- **目标架构**: linux/arm/v7" >> $GITHUB_STEP_SUMMARY
        echo "- **基础镜像**: python:3.12-slim-bookworm" >> $GITHUB_STEP_SUMMARY
        echo "- **构建时间**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "- **提交**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **同步状态**: ✅ Docker Hub → 阿里云" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🚀 使用方法" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**阿里云镜像（国内推荐）**：" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        echo "docker run -d --name sgcc_electricity \\" >> $GITHUB_STEP_SUMMARY
        echo "  --network host \\" >> $GITHUB_STEP_SUMMARY
        echo "  -v \$(pwd):/data \\" >> $GITHUB_STEP_SUMMARY
        echo "  -e PHONE_NUMBER='your_phone' \\" >> $GITHUB_STEP_SUMMARY
        echo "  -e PASSWORD='your_password' \\" >> $GITHUB_STEP_SUMMARY
        echo "  -e HASS_URL='http://homeassistant.local:8123/' \\" >> $GITHUB_STEP_SUMMARY
        echo "  -e HASS_TOKEN='your_token' \\" >> $GITHUB_STEP_SUMMARY
        echo "  crpi-s1ugew53omsoe998.cn-hangzhou.personal.cr.aliyuncs.com/helloworld-lin/sgcc_electricity:armv7-latest" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Docker Hub镜像（国外）**：" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        echo "docker run -d --name sgcc_electricity \\" >> $GITHUB_STEP_SUMMARY
        echo "  --network host \\" >> $GITHUB_STEP_SUMMARY
        echo "  -v \$(pwd):/data \\" >> $GITHUB_STEP_SUMMARY
        echo "  -e PHONE_NUMBER='your_phone' \\" >> $GITHUB_STEP_SUMMARY
        echo "  -e PASSWORD='your_password' \\" >> $GITHUB_STEP_SUMMARY
        echo "  -e HASS_URL='http://homeassistant.local:8123/' \\" >> $GITHUB_STEP_SUMMARY
        echo "  -e HASS_TOKEN='your_token' \\" >> $GITHUB_STEP_SUMMARY
        echo "  ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:armv7-latest" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔄 镜像同步说明" >> $GITHUB_STEP_SUMMARY
        echo "1. 首先构建并推送到Docker Hub" >> $GITHUB_STEP_SUMMARY
        echo "2. 然后从Docker Hub拉取镜像" >> $GITHUB_STEP_SUMMARY
        echo "3. 重新标记并推送到阿里云" >> $GITHUB_STEP_SUMMARY
        echo "4. 绕过阿里云直接构建的403错误" >> $GITHUB_STEP_SUMMARY
