# ARMv7架构优化Dockerfile - 最小化镜像
FROM python:3.12-slim-bookworm

# 设置环境变量
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV SET_CONTAINER_TIMEZONE=true
ENV CONTAINER_TIMEZONE=Asia/Shanghai
ENV TZ=Asia/Shanghai
ENV LANG=C.UTF-8
ENV PYTHON_IN_DOCKER='PYTHON_IN_DOCKER'

# 创建非root用户
RUN groupadd -r appuser && useradd -r -g appuser appuser

# 安装系统依赖（包含Python数值计算包和Pillow依赖）
RUN set -eux; \
    apt-get update; \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
      firefox-esr \
      tzdata \
      jq \
      ca-certificates \
      wget \
      tar \
      curl \
      build-essential \
      python3-numpy \
      python3-pip \
      python3-setuptools \
      python3-wheel \
      python3-pillow \
      zlib1g-dev \
      libjpeg-dev \
      libpng-dev \
    ; \
    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime; \
    echo $TZ > /etc/timezone; \
    dpkg-reconfigure --frontend noninteractive tzdata; \
    rm -rf /var/lib/apt/lists/*; \
    apt-get clean

# 创建应用目录
WORKDIR /app
RUN mkdir -p /data && chown -R appuser:appuser /app /data

# 复制requirements.txt并安装Python依赖（优化armv7构建）
COPY requirements.txt /tmp/requirements.txt
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir -r /tmp/requirements.txt \
    && rm -rf /tmp/* \
    && pip cache purge

# 使用Python脚本下载geckodriver（支持ARMv7）
COPY scripts/firefox_driver_download.py /tmp/firefox_driver_download.py
RUN cd /tmp && python3 firefox_driver_download.py && \
    find /root/.webdriver -name "geckodriver" -type f -exec mv {} /usr/local/bin/geckodriver \; && \
    chmod +x /usr/local/bin/geckodriver && \
    geckodriver --version && \
    rm -rf /root/.webdriver /tmp/firefox_driver_download.py

# 复制应用代码
COPY scripts/*.py /app/
RUN chown -R appuser:appuser /app

# 切换到非root用户
USER appuser

# 健康检查（修正模块导入）
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python3 -c "from ncc_matcher import NCCMatcher; print('NCC Health Check OK')" || exit 1

# 启动命令
CMD ["python3", "main.py"]
